[tool.poetry]
name = "your-project-name"
version = "0.1.0"
description = ""
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"

# adds subproject as a package of your main project
# disclaimer: it has to be under the main dependencies tab
# your-worker = { path = "your-worker", develop = true }

[tool.poetry.group.dev.dependencies]
localstack-client = "^2.5"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
taskipy = "^1.13.0"
ruff = "^0.5.5"
httpx = "^0.27.0"
ipykernel = "^6.29.5"
testcontainers = "^4.7.2"
ipdb = "^0.13.13"
pyperclip = "^1.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

# I (Isort): Checks import ordering
# F (Pyflakes): Searches for common errors related to good coding practices
# E (Erros pycodestyle): Code style errors
# W (Avisos pycodestyle): Warns about code style issues
# PL (Pylint): Checks for errors and code smells
# PT (flake8-pytest): Checks for common pytest errors



[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings' # Supress warning messages in pytest

[tool.taskipy.tasks]
lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'
run = 'fastapi dev your-project-name/app.py'
pre_test = 'task lint'
test = 'poetry run pytest -s -x -vv --cov=your-project-name'
debug = 'poetry run pytest -s -x -vv --pdb --pdbcls=IPython.terminal.debugger:Pdb'
post_test = 'coverage html'

[tool.poetry.scripts]
your-consumer = "your-project-name.app:main"
